{"ast":null,"code":"var _jsxFileName = \"C:\\\\assignment\\\\task-manager-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport API from '../api/axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await API.get('/tasks');\n        setTasks(res.data.tasks || res.data); // support both response styles\n      } catch (err) {\n        setError('Failed to fetch tasks');\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"My Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/task/create\",\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"+ Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : tasks.map(task => {\n        var _task$dueDate;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/task/${task._id}`,\n          className: \"block p-4 bg-white shadow rounded hover:bg-gray-50 border\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"Priority: \", task.priority, \" | Status: \", task.status, \" | Due: \", (_task$dueDate = task.dueDate) === null || _task$dueDate === void 0 ? void 0 : _task$dueDate.slice(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"mUY3UIxV7kMIC0enHxY7PEoVTBU=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","API","Link","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","error","setError","fetchTasks","res","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","task","_task$dueDate","_id","title","priority","status","dueDate","slice","_c","$RefreshReg$"],"sources":["C:/assignment/task-manager-frontend/src/pages/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport API from '../api/axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const res = await API.get('/tasks');\r\n        setTasks(res.data.tasks || res.data); // support both response styles\r\n      } catch (err) {\r\n        setError('Failed to fetch tasks');\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">My Tasks</h1>\r\n        <Link to=\"/task/create\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n          + Create Task\r\n        </Link>\r\n      </div>\r\n\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n      <div className=\"space-y-4\">\r\n        {tasks.length === 0 ? (\r\n          <p>No tasks found.</p>\r\n        ) : (\r\n          tasks.map(task => (\r\n            <Link\r\n              to={`/task/${task._id}`}\r\n              key={task._id}\r\n              className=\"block p-4 bg-white shadow rounded hover:bg-gray-50 border\"\r\n            >\r\n              <h3 className=\"font-semibold\">{task.title}</h3>\r\n              <p className=\"text-sm text-gray-600\">\r\n                Priority: {task.priority} | Status: {task.status} | Due: {task.dueDate?.slice(0, 10)}\r\n              </p>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}